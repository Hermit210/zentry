version: '3.8'

services:
  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/zentrycloud
      - SUPABASE_URL=${SUPABASE_URL:-}
      - SUPABASE_KEY=${SUPABASE_KEY:-}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-key-here}
      - CORS_ORIGINS=http://localhost:3000,http://localhost:3001
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
    restart: unless-stopped
    networks:
      - zentrycloud

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=zentrycloud
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - zentrycloud

  # Frontend (Next.js)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NODE_ENV=development
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - zentrycloud

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - zentrycloud

volumes:
  postgres_data:
  redis_data:

networks:
  zentrycloud:
    driver: bridge